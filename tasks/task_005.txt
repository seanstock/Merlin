# Task ID: 5
# Title: Offline Fallback System
# Status: deferred
# Dependencies: 1, 3, 4
# Priority: medium
# Description: Implement a local fallback system that loads educational tasks from bundled JSON when OpenAI API calls fail, ensuring the app remains functional offline.
# Details:
1. Create fallback tasks JSON structure in assets/fallback_tasks.json:
```json
{
  "tasks": [
    {
      "id": "math_addition_1",
      "type": "quiz",
      "subject": "math",
      "difficulty": 1,
      "prompt": "What is 2 + 3?",
      "options": ["4", "5", "6", "7"],
      "correct_answer": "5",
      "age_range": [4, 7]
    },
    // More tasks...
  ]
}
```

2. Implement fallback task loader:
```kotlin
class FallbackTaskProvider(private val context: Context) {
    private val tasks: List<FallbackTask> by lazy {
        val json = context.assets.open("fallback_tasks.json").bufferedReader().use { it.readText() }
        // Parse JSON to task list
    }
    
    fun getTaskForChild(childProfile: ChildProfile): FallbackTask {
        // Select appropriate task based on child's age, previous performance, etc.
    }
}
```

3. Create connectivity monitor to detect API failures
4. Implement seamless transition between online and offline modes
5. Add mechanism to sync offline activity when connectivity is restored

# Test Strategy:
Test offline functionality by disabling network connectivity. Verify appropriate tasks are selected based on child profile. Confirm offline activities are properly synced when connectivity is restored.
